@import '_component';

/* Color properties */
:root
{
    /* black and white universal properties */
    --css-black: #000;
    --css-white: #FFF;
    /* default palette (Grey) */
    --css-primary-50: #FAFAFA;
    --css-primary-100: #F5F5F5;
    --css-primary-200: #EEEEEE;
    --css-primary-300: #E0E0E0;
    --css-primary-400: #BDBDBD;
    --css-primary-500: #9E9E9E;
    --css-primary-600: #757575;
    --css-primary-700: #616161;
    --css-primary-800: #424242;
    --css-primary-900: #212121;
}

// Light theme colors
body:not(data-css-theme),
body[data-css-theme="light"]
{
    &
    {
        background: var(--css-primary-50);
        color: var(--css-primary-800);
    }
    
    [data-css-accent],
    * [data-css-accent],
    [data-css-accent] :not([data-css-primary])
    {
        // Normal state
        @include pallete-color-group(accent, normal, 100, 500, 900);
        // Selected state
        @include pallete-color-group(accent, selected, 300, 700, 900);
        // Pressed state
        @include pallete-color-group(accent, pressed, 400, 900, 900);
        // Disabled state
        @include pallete-color-group(accent, disabled, 50, 300, 700);

        // Info type
        &[data-css-type="info"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, white, 100, 800);
            // Selected state
            @include pallete-color-group(accent, selected, 200, 300, 900);
            // Pressed state
            @include pallete-color-group(accent, pressed, 300, 700, 900);
        }
        
        // Success type
        &[data-css-type="success"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, 200, 300, black);
            // Selected state
            @include pallete-color-group(accent, selected, 500, 500, 900);
            // Pressed state
            @include pallete-color-group(accent, pressed, 600, 700, 900);
        }
        
        // Warning type
        &[data-css-type="warning"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, 500, 600, black);
            // Selected state
            @include pallete-color-group(accent, selected, 800, 800, white);
            // Pressed state
            @include pallete-color-group(accent, pressed, 900, 800, white);
        }

        // Error type
        &[data-css-type="error"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, 700, 800, white);
            // Selected state
            @include pallete-color-group(accent, selected, 900, 800, white);
            // Pressed state
            @include pallete-color-group(accent, pressed, 800, 600, white);
        }

        // Headings
        h1, h2,
        [data-css-role="heading"],
        [role="heading"]
        {
            --css-normal-text: var(--css-accent-700);
        }
        h3, h4, h5, h6
        {
            --css-normal-text: var(--css-accent-800);
        }
    }

    :not([data-css-accent]),
    * [data-css-primary],
    *[data-css-primary],
    [data-css-primary] :not([data-css-accent])
    {
        // Normal state
        @include pallete-color-group(primary, normal, 100, 500, 900);
        // Selected state
        @include pallete-color-group(primary, selected, 300, 700, 900);
        // Pressed state
        @include pallete-color-group(primary, pressed, 400, 900, 900);
        // Disabled state
        @include pallete-color-group(primary, disabled, 50, 300, 700);
        
        // Info type
        &[data-css-type="info"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, white, 100, 800);
            // Selected state
            @include pallete-color-group(primary, selected, 200, 300, 900);
            // Pressed state
            @include pallete-color-group(primary, pressed, 300, 700, 900);
        }
        
        // Success type
        &[data-css-type="success"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, 200, 300, black);
            // Selected state
            @include pallete-color-group(primary, selected, 500, 500, 900);
            // Pressed state
            @include pallete-color-group(primary, pressed, 600, 700, 900);
        }

        // Warning type
        &[data-css-type="warning"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, 500, 600, black);
            // Selected state
            @include pallete-color-group(primary, selected, 800, 800, white);
            // Pressed state
            @include pallete-color-group(primary, pressed, 900, 800, white);
        }

        // Error type
        &[data-css-type="error"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, 700, 800, white);
            // Selected state
            @include pallete-color-group(primary, selected, 900, 800, white);
            // Pressed state
            @include pallete-color-group(primary, pressed, 800, 600, white);
        }

        // Headings
        h1, h2,
        [data-css-role="heading"],
        [role="heading"]
        {
            --css-normal-text: var(--css-primary-700);
        }
        h3, h4, h5, h6
        {
            --css-normal-text: var(--css-primary-800);
        }
    }
}

// Components dark theme colors
body[data-css-theme="dark"]
{
    &
    {
        background: var(--css-primary-900);
        color: var(--css-primary-100);
    }
    
    *[data-css-accent],
    * [data-css-accent],
    [data-css-accent] *:not([data-css-primary])
    {
        // Normal state
        @include pallete-color-group(accent, normal, 800, 500, 100);
        // Selected state
        @include pallete-color-group(accent, selected, 600, 300, 200);
        // Pressed state
        @include pallete-color-group(accent, pressed, 500, 200, 200);
        // Disabled state
        @include pallete-color-group(accent, disabled, 900, 700, 200);

        // Info type
        &[data-css-type="info"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, black, 800, 100);
            // Selected state
            @include pallete-color-group(accent, selected, 800, 500, 50);
            // Pressed state
            @include pallete-color-group(accent, pressed, 700, 400, 50);
        }
        
        // Success type
        &[data-css-type="success"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, 700, 500, 100);
            // Selected state
            @include pallete-color-group(accent, selected, 400, 300, 900);
            // Pressed state
            @include pallete-color-group(accent, pressed, 300, 200, 900);
        }

        // Warning type
        &[data-css-type="warning"]
        {
            // Normal state
            // @include pallete-color-group(primary, normal, 500, 600, black);
            @include pallete-color-group(accent, normal, 400, 200, black);
            // Selected state
            @include pallete-color-group(accent, selected, 100, 50, 900);
            // Pressed state
            @include pallete-color-group(accent, pressed, white, 200, black);
        }

        // Error type
        &[data-css-type="error"]
        {
            // Normal state
            @include pallete-color-group(accent, normal, 200, 50, 900);
            // Selected state
            @include pallete-color-group(accent, selected, white, 100, black);
            // Pressed state
            @include pallete-color-group(accent, pressed, 100, 300, black);
        }

        // Headings
        h1, h2,
        [data-css-role="heading"],
        [role="heading"]
        {
            --css-normal-text: var(--css-accent-300);
        }
        h3, h4, h5, h6
        {
            --css-normal-text: var(--css-accent-200);
        }
    }

    *,
    * [data-css-primary],
    *[data-css-primary],
    [data-css-primary] *:not([data-css-accent])
    {
        // Normal state
        @include pallete-color-group(primary, normal, 800, 500, 100);
        // Selected state
        @include pallete-color-group(primary, selected, 600, 300, 200);
        // Pressed state
        @include pallete-color-group(primary, pressed, 500, 200, 200);
        // Disabled state
        @include pallete-color-group(primary, disabled, 900, 700, 200);

        // Info type
        &[data-css-type="info"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, black, 800, 100);
            // Selected state
            @include pallete-color-group(primary, selected, 800, 500, 50);
            // Pressed state
            @include pallete-color-group(primary, pressed, 700, 400, 50);
        }
        
        // Success type
        &[data-css-type="success"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, 700, 500, 100);
            // Selected state
            @include pallete-color-group(primary, selected, 400, 300, 900);
            // Pressed state
            @include pallete-color-group(primary, pressed, 300, 200, 900);
        }

        // Warning type
        &[data-css-type="warning"]
        {
            // Normal state
            // @include pallete-color-group(primary, normal, 500, 600, black);
            @include pallete-color-group(primary, normal, 400, 200, black);
            // Selected state
            @include pallete-color-group(primary, selected, 100, 50, 900);
            // Pressed state
            @include pallete-color-group(primary, pressed, white, 200, black);
        }

        // Error type
        &[data-css-type="error"]
        {
            // Normal state
            @include pallete-color-group(primary, normal, 200, 50, 900);
            // Selected state
            @include pallete-color-group(primary, selected, white, 100, black);
            // Pressed state
            @include pallete-color-group(primary, pressed, 100, 300, black);
        }

        // Headings
        h1, h2,
        [data-css-role="heading"],
        [role="heading"]
        {
            --css-normal-text: var(--css-primary-300);
        }
        h3, h4, h5, h6
        {
            --css-normal-text: var(--css-primary-200);
        }
    }
}




/* Basic styles */
html,
body
{
    display: block;
    min-height: 100%;
    position: relative;
    margin: 0;
    min-width: 100%;
    z-index: 1;
}
body
{
    font-family: "Trebuchet MS", Helvetica, sans-serif;
    font-size: 14px;
}
[role],
[data-css-role]
{
    position: relative;
}



/* Hidden items */
[hidden]
{
    display: none;
}



/* Headers */
h1, h2, h3, h4, h5, h6,
[data-css-role="heading"]
[role="heading"]
{
    color: var(--css-normal-text);
    font-family: Arial, Helvetica, sans-serif;
    font-size: 14px;
    font-weight: normal;
    margin-top: 0;
    margin-bottom: 1.875rem;
    text-decoration: none;
}

h1
{
    font-size: 2.617rem;
}
h2
{
    font-size: 2.292rem;
}
h3
{
    font-size: 1.969em;
}
h4
{
    font-size: 1.646em;
}
h5
{
    font-size: 1.323em;
}



/* Floats and clears */
[data-css-float="left"]
{
    float: left;
}
[data-css-float="right"]
{
    float: right;
}
[data-css-clear="left"]
{
    clear: left;
}
[data-css-clear="right"]
{
    clear: right;
}
[data-css-clear="both"]
{
    clear: both;
}



/* Positioning */
[data-css-position="absolute"]
{
    position: absolute;
}
[data-css-position="fixed"]
{
    position: fixed;
}
[data-css-position="relative"]
{
    position: relative;
}
[data-css-position="static"]
{
    position: static;
}
[data-css-position="sticky"]
{
    position: sticky;
}



/* Text formatting */
[data-css-bold]
{
    font-weight: bold;
}
[data-css-italic]
{
    font-style: italic;
}
[data-css-line-through]
{
    text-decoration: line-through;
}
[data-css-oblique]
{
    font-style: oblique;
}
[data-css-overline]
{
    text-decoration: overline;
}
[data-css-underline]
{
    text-decoration: underline;
}



// Icons support for elements
i[data-css-icon]
{
    font-style: normal;
}
[data-css-icon]::before
{
    color: inherit;
    display: inline-block;
    line-height: 1em;
    min-height: 1em;
    min-width: 1em;
    text-align: center;
}
// Custom icon
[data-css-icon]:not([data-css-icon=""])::before
{
    content: attr(data-css-icon);
}
// Default icons for element types
[data-css-icon=""]
{
    // Info type
    &[data-css-type="info"]::before
    {
        content: '\2139';
        border: 1px solid;
        border-radius: 50%;
        position: relative;
    }
    // Success type
    &[data-css-type="success"]::before
    {
        content: '\2714';
        border: 1px solid;
        border-radius: 50%;
    }
    // Warning type
    &[data-css-type="warning"]::before
    {
        content: '\26a0';
    }
    // Error type
    &[data-css-type="error"]::before
    {
        content: '\FF01';
        margin-left: -0.5em;
        position: relative;
        left: .5em;
    }
}